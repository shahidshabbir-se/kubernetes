name: CI/CD Pipeline

on:
  push:
    branches: [master]

jobs:
  deploy:
    name: Build and Deploy to k3s via Tailscale
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry (GHCR)
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and Push Docker image to GHCR
      run: |
        docker build -t ghcr.io/shahidshabbir-se/kubernetes:latest .
        docker push ghcr.io/shahidshabbir-se/kubernetes:latest

    - name: Prepare SSH key for Tailscale access
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/vps_key
        chmod 600 ~/.ssh/vps_key

    - name: SSH into VPS and deploy to k3s
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/vps_key ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_HOST }} << 'EOF'
          set -e
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

          echo "[+] Pulling latest code..."
          cd ~/k8s-node-app
          git pull origin main

          echo "[+] Logging into GHCR (inside VPS)..."
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          echo "[+] Applying PostgreSQL manifests..."
          kubectl apply -f k8s/postgres/

          echo "[+] Creating/updating Caddy configmap..."
          kubectl create configmap caddy-config --from-file=k8s/caddy/config/Caddyfile --dry-run=client -o yaml | kubectl apply -f -

          echo "[+] Deploying Caddy reverse proxy..."
          kubectl apply -f k8s/caddy/

          echo "[+] Deploying application..."
          kubectl apply -f k8s/app/

          echo "[âœ”] Deployment complete."
        EOF
